swagger: "2.0"
info:
  description: "This is an api that is used by our [table tennis online shop](https://de9bltgxbvako.cloudfront.net/). There you could buy everything you need for the best table tennis experience!"
  version: "1.0.0"
  title: "Swagger for Table Tennis Online Shop"
  contact:
    email: "volodymyrskorik@gmail.com"
host: "jh16kdf75j.execute-api.eu-west-1.amazonaws.com"
basePath: "/dev"
tags:
- name: "product"
  description: "Everything about our products"
schemes:
- "https"
paths:
  /products:
    get:
      tags:
      - "product"
      summary: "Get all available products"
      operationId: "getAllProducts"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
    post:
      tags:
      - "product"
      summary: "Create product"
      description: ""
      operationId: "createProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/ProductData"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "400":
          description: "Incorrect request body"
  /products/{productId}:
    get:
      tags:
      - "product"
      summary: "Get product by id"
      description: ""
      operationId: "findProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "UUID of product"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Product was not found"
definitions:
  ProductData:
    type: "object"
    properties:
      title:
        type: "string"
      description:
        type: "string"
      price:
        type: "number"
        format: "integer"
        exclusiveMinimum: true
        minimum: 0
      count:
        type: "integer"
        exclusiveMinimum: true
        minimum: 0
  Product:
    allOf:
    - type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
    - $ref: "#/definitions/ProductData"